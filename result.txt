([NIheader{
	preamble : [
		'/*============================================================================*/',
		'/*                 National Instruments / Data Acquisition                    */',
		'/*----------------------------------------------------------------------------*/',
		'/*    Copyright (c) National Instruments 2003-2013.  All Rights Reserved.     */',
		'/*----------------------------------------------------------------------------*/',
		'/*                                                                            */',
		'/* Title:       NIDAQmx.h                                                     */',
		'/* Purpose:     Include file for NI-DAQmx  library support.                */',
		'/*                                                                            */',
		'/*============================================================================*/'
	],
	body : statement{
		title : [
			'/******************************************************************************\n *** NI-DAQmx Values **********************************************************\n ******************************************************************************/',
			'/******************************************************/',
			'/***    Non-Attribute Function Parameter Values     ***/',
			'/******************************************************/'
		],
		contents : [
			content{
				header : [
					'//*** Values for the Mode parameter of DAQmxTaskControl ***'
				],
				definition : [
					definitionLine{
						label : Task_Start,
						expression : 0,
						detail : // Start
					},
					definitionLine{
						label : Task_Stop,
						expression : 1,
						detail : // Stop
					},
					definitionLine{
						label : Task_Verify,
						expression : 2,
						detail : // Verify
					},
					definitionLine{
						label : Task_Commit,
						expression : 3,
						detail : // Commit
					},
					definitionLine{
						label : Task_Reserve,
						expression : 4,
						detail : // Reserve
					},
					definitionLine{
						label : Task_Unreserve,
						expression : 5,
						detail : // Unreserve
					},
					definitionLine{
						label : Task_Abort,
						expression : 6,
						detail : // Abort
					}
				]
			},
			content{
				header : [
					'//*** Values for the Options parameter of the event registration functions'
				],
				definition : [
					definitionLine{
						label : SynchronousEventCallbacks,
						expression : (1<<0),
						detail : // Synchronous callbacks
					}
				]
			},
			content{
				header : [
					'//*** Values for the everyNsamplesEventType parameter of DAQmxRegisterEveryNSamplesEvent ***'
				],
				definition : [
					definitionLine{
						label : Acquired_Into_Buffer,
						expression : 1,
						detail : // Acquired Into Buffer
					},
					definitionLine{
						label : Transferred_From_Buffer,
						expression : 2,
						detail : // Transferred From Buffer
					}
				]
			},
			content{
				header : [
					'//*** Values for the Action parameter of DAQmxControlWatchdogTask ***'
				],
				definition : [
					definitionLine{
						label : ResetTimer,
						expression : 0,
						detail : // Reset Timer
					},
					definitionLine{
						label : ClearExpiration,
						expression : 1,
						detail : // Clear Expiration
					}
				]
			},
			content{
				header : [
					'//*** Values for the Line Grouping parameter of DAQmxCreateDIChan and DAQmxCreateDOChan ***'
				],
				definition : [
					definitionLine{
						label : ChanPerLine,
						expression : 0,
						detail : // One Channel For Each Line
					},
					definitionLine{
						label : ChanForAllLines,
						expression : 1,
						detail : // One Channel For All Lines
					}
				]
			},
			content{
				header : [
					'//*** Values for the Fill Mode parameter of DAQmxReadAnalogF64, DAQmxReadBinaryI16, DAQmxReadBinaryU16, DAQmxReadBinaryI32, DAQmxReadBinaryU32,',
					'//    DAQmxReadDigitalU8, DAQmxReadDigitalU32, DAQmxReadDigitalLines ***',
					'//*** Values for the Data Layout parameter of DAQmxWriteAnalogF64, DAQmxWriteBinaryI16, DAQmxWriteDigitalU8, DAQmxWriteDigitalU32, DAQmxWriteDigitalLines ***'
				],
				definition : [
					definitionLine{
						label : GroupByChannel,
						expression : 0,
						detail : // Group by Channel
					},
					definitionLine{
						label : GroupByScanNumber,
						expression : 1,
						detail : // Group by Scan Number
					}
				]
			},
			content{
				header : [
					'//*** Values for the Signal Modifiers parameter of DAQmxConnectTerms ***/'
				],
				definition : [
					definitionLine{
						label : DoNotInvertPolarity,
						expression : 0,
						detail : // Do not invert polarity
					},
					definitionLine{
						label : InvertPolarity,
						expression : 1,
						detail : // Invert polarity
					}
				]
			},
			content{
				header : [
					'//*** Values for the Action paramter of DAQmxCloseExtCal ***'
				],
				definition : [
					definitionLine{
						label : Action_Commit,
						expression : 0,
						detail : // Commit
					},
					definitionLine{
						label : Action_Cancel,
						expression : 1,
						detail : // Cancel
					}
				]
			},
			content{
				header : [
					'//*** Values for the Trigger ID parameter of DAQmxSendSoftwareTrigger ***'
				],
				definition : [
					definitionLine{
						label : AdvanceTrigger,
						expression : 12488,
						detail : // Advance Trigger
					}
				]
			},
			content{
				header : [
					'//*** Value set for the ActiveEdge parameter of DAQmxCfgSampClkTiming and DAQmxCfgPipelinedSampClkTiming ***'
				],
				definition : [
					definitionLine{
						label : Rising,
						expression : 10280,
						detail : // Rising
					},
					definitionLine{
						label : Falling,
						expression : 10171,
						detail : // Falling
					}
				]
			},
			content{
				header : [
					'//*** Value set SwitchPathType ***',
					'//*** Value set for the output Path Status parameter of DAQmxSwitchFindPath ***'
				],
				definition : [
					definitionLine{
						label : PathStatus_Available,
						expression : 10431,
						detail : // Path Available
					},
					definitionLine{
						label : PathStatus_AlreadyExists,
						expression : 10432,
						detail : // Path Already Exists
					},
					definitionLine{
						label : PathStatus_Unsupported,
						expression : 10433,
						detail : // Path Unsupported
					},
					definitionLine{
						label : PathStatus_ChannelInUse,
						expression : 10434,
						detail : // Channel In Use
					},
					definitionLine{
						label : PathStatus_SourceChannelConflict,
						expression : 10435,
						detail : // Channel Source Conflict
					},
					definitionLine{
						label : PathStatus_ChannelReservedForRouting,
						expression : 10436,
						detail : // Channel Reserved for Routing
					}
				]
			},
			content{
				header : [
					'//*** Value set for the Units parameter of DAQmxCreateAIThrmcplChan, DAQmxCreateAIRTDChan, DAQmxCreateAIThrmstrChanIex, DAQmxCreateAIThrmstrChanVex and DAQmxCreateAITempBuiltInSensorChan ***'
				],
				definition : [
					definitionLine{
						label : DegC,
						expression : 10143,
						detail : // Deg C
					},
					definitionLine{
						label : DegF,
						expression : 10144,
						detail : // Deg F
					},
					definitionLine{
						label : Kelvins,
						expression : 10325,
						detail : // Kelvins
					},
					definitionLine{
						label : DegR,
						expression : 10145,
						detail : // Deg R
					}
				]
			},
			content{
				header : [
					'//*** Value set for the state parameter of DAQmxSetDigitalPowerUpStates ***'
				],
				definition : [
					definitionLine{
						label : High,
						expression : 10192,
						detail : // High
					},
					definitionLine{
						label : Low,
						expression : 10214,
						detail : // Low
					},
					definitionLine{
						label : Tristate,
						expression : 10310,
						detail : // Tristate
					}
				]
			},
			content{
				header : [
					'//*** Value set for the state parameter of DAQmxSetDigitalPullUpPullDownStates ***'
				],
				definition : [
					definitionLine{
						label : PullUp,
						expression : 15950,
						detail : // Pull Up
					},
					definitionLine{
						label : PullDown,
						expression : 15951,
						detail : // Pull Down
					}
				]
			},
			content{
				header : [
					'//*** Value set for the channelType parameter of DAQmxSetAnalogPowerUpStates & DAQmxGetAnalogPowerUpStates ***'
				],
				definition : [
					definitionLine{
						label : ChannelVoltage,
						expression : 0,
						detail : // Voltage Channel
					},
					definitionLine{
						label : ChannelCurrent,
						expression : 1,
						detail : // Current Channel
					},
					definitionLine{
						label : ChannelHighImpedance,
						expression : 2,
						detail : // High-Impedance Channel
					}
				]
			},
			content{
				header : [
					'//*** Value set RelayPos ***',
					'//*** Value set for the state parameter of DAQmxSwitchGetSingleRelayPos and DAQmxSwitchGetMultiRelayPos ***'
				],
				definition : [
					definitionLine{
						label : Open,
						expression : 10437,
						detail : // Open
					},
					definitionLine{
						label : Closed,
						expression : 10438,
						detail : // Closed
					}
				]
			},
			content{
				header : [
					'//*** Value set for the inputCalSource parameter of DAQmxAdjust1540Cal ***'
				],
				definition : [
					definitionLine{
						label : Loopback0,
						expression : 0,
						detail : // Loopback 0 degree shift
					},
					definitionLine{
						label : Loopback180,
						expression : 1,
						detail : // Loopback 180 degree shift
					},
					definitionLine{
						label : Ground,
						expression : 2,
						detail : // Ground
					}
				]
			},
			content{
				header : [
					'//*** Value set for output type for 4322 Calibration functions ***'
				],
				definition : [
					definitionLine{
						label : Voltage,
						expression : 10322,
						detail : // Voltage
					},
					definitionLine{
						label : Current,
						expression : 10134,
						detail : // Current
					}
				]
			},
			content{
				header : [
					'//*** Value for the Terminal Config parameter of DAQmxCreateAIVoltageChan, DAQmxCreateAICurrentChan and DAQmxCreateAIVoltageChanWithExcit ***'
				],
				definition : [
					definitionLine{
						label : Cfg_Default,
						expression : -1,
						detail : // Default
					}
				]
			},
			content{
				header : [
					'//*** Value for the Shunt Resistor Location parameter of DAQmxCreateAICurrentChan ***'
				],
				definition : [
					definitionLine{
						label : Default,
						expression : -1,
						detail : // Default
					}
				]
			},
			content{
				header : [
					'//*** Value for the Timeout parameter of DAQmxWaitUntilTaskDone'
				],
				definition : [
					definitionLine{
						label : WaitInfinitely,
						expression : -1.0,
						detail : //*** Value for the Number of Samples per Channel parameter of DAQmxReadAnalogF64, DAQmxReadBinaryI16, DAQmxReadBinaryU16,
					}
				]
			},
			content{
				header : [
					'//    DAQmxReadBinaryI32, DAQmxReadBinaryU32, DAQmxReadDigitalU8, DAQmxReadDigitalU32,',
					'//    DAQmxReadDigitalLines, DAQmxReadCounterF64, DAQmxReadCounterU32 and DAQmxReadRaw ***'
				],
				definition : [
					definitionLine{
						label : Auto,
						expression : -1,
						detail : // Value set for the Options parameter of DAQmxSaveTask, DAQmxSaveGlobalChan and DAQmxSaveScale
					}
				]
			}
		]
	}
}], {})